import Image from "next/image";
import Head from "next/head";
import { useRouter } from "next/router";
import React, { useContext } from "react";

import bannerImg from "@/assets/banner.svg";

import { Search } from "@/components";

import { api } from "@/services/api";

import { HomeContainer, HomeContent } from "@/styles/home";

import { AppContext } from "@/context";

interface responsePullRequestProp {
  user: {
    login: string;
  };
}
interface responseUserProp {
  name: string;
}
export default function Home() {
  const router = useRouter();
  const context = useContext(AppContext);

  const searchPullRequest = async (prUrl: string) => {
    const match: RegExpMatchArray | null = prUrl.match(
      /https:\/\/github\.com\/([^/]+)\/([^/]+)\/pull\/(\d+)/
    );
    if (match) {
      const owner: string = match[1];
      const repo: string = match[2];
      const pull_number: string = match[3];
      const response = await api
        .get<responsePullRequestProp>(
          `/repos/${owner}/${repo}/pulls/${pull_number}`
        )
        .catch((error) => {
          console.log(error);
        });
      const responseUser = await api.get<responseUserProp>(
        `/users/${response?.data.user.login}`
      );

      const infoUser = {
        name: responseUser?.data.name,
        prUrl,
        repo,
      };

      context.updateUser(infoUser);
      router.push("/post");
    } else {
      console.log("Invalid URL");
    }
  };

  return (
    <>
      <Head>
        <title>Pull Snap</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <HomeContainer>
        <HomeContent>
          <Search
            label="Link do Pull Request"
            textButton="Pesquisar"
            action={(url) => searchPullRequest(url)}
          />
          <Image src={bannerImg} alt="" priority />
        </HomeContent>
      </HomeContainer>
    </>
  );
}
